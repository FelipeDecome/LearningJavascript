{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","string","test","Date","split","reverse","map","item","ind","date","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqBA,gB;AACnB,8BAAc;AAAA;;AACZ,gBAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;;;iCAEaC,M,EAAQ;AACpB,gBAAI,CAAC,sBAAsBC,IAAtB,CAA2BD,MAA3B,CAAL,EACE,MAAM,IAAID,KAAJ,CACJ,2EADI,CAAN;;AAIF,sDAAWG,IAAX,mCACKF,OACAG,KADA,CACM,GADN,EAEAC,OAFA,GAGAC,GAHA,CAGI,UAACC,IAAD,EAAOC,GAAP;AAAA,qBAAeD,OAAQC,MAAM,CAA7B;AAAA,aAHJ,CADL;AAMD;;;mCAEeC,I,EAAM;AACpB,mBAAUA,KAAKC,OAAL,EAAV,WAA6BD,KAAKE,QAAL,KAAkB,CAA/C,UAAoDF,KAAKG,WAAL,EAApD;AACD;;;;;;yBArBkBb,U","file":"DateHelper.js","sourcesContent":["export default class DateHelper {\n  constructor() {\n    throw new Error(\"Está classe não precisa ser instanciada.\");\n  }\n\n  static toDate(string) {\n    if (!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(string))\n      throw new Error(\n        \"Data no formato errado, a data deve ser inserida no formato 'dd/mm/aaaa'.\"\n      );\n\n    return new Date(\n      ...string\n        .split(\"/\")\n        .reverse()\n        .map((item, ind) => item - (ind % 2))\n    );\n  }\n\n  static toString(date) {\n    return `${date.getDate()}/0${date.getMonth() + 1}/${date.getFullYear()}`;\n  }\n}\n"]}