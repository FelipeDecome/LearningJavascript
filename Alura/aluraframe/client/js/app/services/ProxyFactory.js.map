{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","Error","object","props","action","Proxy","get","target","prop","receiver","includes","_isFunc","console","log","retorno","Reflect","apply","arguments","set","value","func","Function"],"mappings":";;;;;;;;IAAMA,Y;AAEJ,0BAAc;AAAA;;AAEZ,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;;;2BAEaC,M,EAAQC,K,EAAOC,M,EAAQ;;AAEnC,aAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;AAEvBI,WAFuB,eAEnBC,MAFmB,EAEXC,IAFW,EAELC,QAFK,EAEK;;AAE1B,cAAIN,MAAMO,QAAN,CAAeF,IAAf,KAAwBR,aAAaW,OAAb,CAAqBJ,OAAOC,IAAP,CAArB,CAA5B,EAAgE;;AAE9D,mBAAO,YAAY;;AAEjBI,sBAAQC,GAAR,oBAA6BL,IAA7B;AACA,kBAAIM,UAAUC,QAAQC,KAAR,CAAcT,OAAOC,IAAP,CAAd,EAA4BD,MAA5B,EAAoCU,SAApC,CAAd;AACAb,qBAAOG,MAAP;;AAEA,qBAAOO,OAAP;AACD,aAPD;AAQD;;AAED,iBAAOC,QAAQT,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,CAAP;AACD,SAjBsB;AAmBvBS,WAnBuB,eAmBnBX,MAnBmB,EAmBXC,IAnBW,EAmBLW,KAnBK,EAmBEV,QAnBF,EAmBY;;AAEjC,cAAIK,UAAUC,QAAQG,GAAR,CAAYX,MAAZ,EAAoBC,IAApB,EAA0BW,KAA1B,EAAiCV,QAAjC,CAAd;AACA,cAAIN,MAAMO,QAAN,CAAeF,IAAf,CAAJ,EAA0BJ,OAAOG,MAAP;;AAE1B,iBAAOO,OAAP;AACD;AAzBsB,OAAlB,CAAP;AA2BD;;;4BAEcM,I,EAAM;;AAEnB,aAAO,QAAOA,IAAP,yCAAOA,IAAP,cAAsBC,QAAtB,yCAAsBA,QAAtB,EAAP;AACD","file":"ProxyFactory.js","sourcesContent":["class ProxyFactory {\n\n  constructor() {\n\n    throw new Error('A classe ProxyFactory n√£o pode ser instanciada')\n  }\n\n  static create(object, props, action) {\n\n    return new Proxy(object, {\n\n      get(target, prop, receiver) {\n\n        if (props.includes(prop) && ProxyFactory._isFunc(target[prop])) {\n\n          return function () {\n\n            console.log(`interceptando ${prop}`);\n            let retorno = Reflect.apply(target[prop], target, arguments);\n            action(target);\n\n            return retorno;\n          };\n        }\n\n        return Reflect.get(target, prop, receiver);\n      },\n\n      set(target, prop, value, receiver) {\n\n        let retorno = Reflect.set(target, prop, value, receiver);\n        if (props.includes(prop)) action(target);\n\n        return retorno;\n      }\n    });\n  }\n\n  static _isFunc(func) {\n\n    return typeof func == typeof Function;\n  }\n\n}\n"]}